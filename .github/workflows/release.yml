name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: linux
            arch: arm
            goarm: 7

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        GOARM: ${{ matrix.goarm }}
        CGO_ENABLED: 0
      run: |
        # Build the agent
        go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
          -o sm-agent-${{ matrix.os }}-${{ matrix.arch }} \
          ./cmd/agent
        
        # Make executable
        chmod +x sm-agent-${{ matrix.os }}-${{ matrix.arch }}
        
        # Create checksum
        sha256sum sm-agent-${{ matrix.os }}-${{ matrix.arch }} > sm-agent-${{ matrix.os }}-${{ matrix.arch }}.sha256

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          sm-agent-${{ matrix.os }}-${{ matrix.arch }}
          sm-agent-${{ matrix.os }}-${{ matrix.arch }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: binaries-*
        merge-multiple: true

    - name: List downloaded files
      run: ls -la

    - name: Delete existing release if it exists
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Delete release if it exists
        gh release delete ${{ github.ref_name }} --yes --cleanup-tag || true
      continue-on-error: true

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          sm-agent-*
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 