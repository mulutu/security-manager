events {
    worker_connections 1024;
}

http {
    upstream ingest_backend {
        server ingest:9002;
    }

    # HTTP server (for monitoring/health checks)
    server {
        listen 80;
        server_name 178.79.139.38;

        location /health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        location /nats {
            proxy_pass http://nats:8222;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /clickhouse {
            proxy_pass http://clickhouse:8123;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # HTTPS server (for future TLS termination)
    # server {
    #     listen 443 ssl http2;
    #     server_name 178.79.139.38;
    #     
    #     ssl_certificate /etc/nginx/ssl/server.crt;
    #     ssl_certificate_key /etc/nginx/ssl/server.key;
    #     
    #     location / {
    #         grpc_pass grpc://ingest_backend;
    #         grpc_set_header Host $host;
    #         grpc_set_header X-Real-IP $remote_addr;
    #     }
    # }
}

# gRPC stream for agent connections (direct pass-through)
stream {
    upstream grpc_backend {
        server ingest:9002;
    }

    server {
        listen 9002;
        proxy_pass grpc_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
} 